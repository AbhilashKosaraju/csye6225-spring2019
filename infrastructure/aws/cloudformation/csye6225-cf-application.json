{  
 "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Application Stack for CSYE 6225 - Spring 2019",
   "Parameters":{

      "circleci":{
         "Description":"circleci user",
         "Type":"String"
      },
      "NetworkStackNameParameter":{
         "Description":"Network Stack Name",
         "Type":"String"
      },
      "ApplicationStackNameParameter":{
         "Description":"Application Stack Name",
         "Type":"String"
      },
"KeyName": {
      "Description": "EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
      
      "ImageID":{
         "Type":"String"
      },
      "PublicSubnetKey3":{
         "Type":"String"
      },
      "PublicSubnetKey2":{
         "Type":"String"
      },
      "PublicSubnetKey1":{
         "Type":"String"
      },
	"CDARN":{"Type": "String"},
	"CDARN1": {"Type": "String"},
	"Bucket":{"Type": "String"},
	"Bucket1":{"Type": "String"},

      "VpcID":{
         "Type":"String"
      },
	"S3Bucket":{
	"Type":"String"
	}
   },
   "Conditions":{
      "Is-EC2-VPC":{
         "Fn::Equals":[
            {
               "Ref":"AWS::Region"
            },
            "us-east-1"
         ]
      }
   },
   "Resources":{
      "EC2Instance":{
         "Type":"AWS::EC2::Instance",
         "Properties":{
            "ImageId":{
               "Ref":"ImageID"
            },
            "InstanceType":"t2.micro",
"KeyName": {
            "Ref": "KeyName"
          },
            "IamInstanceProfile":"ec2instanceprofile",
            
              "UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash -xe ",
								"sudo su",
								"yum install ruby wget java-1.8.0-openjdk-devel -y",
								"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
								"chmod +x ./install \n",
								"./install auto \n",
								"service codedeploy-agent start \n",
								"groupadd tomcat",
								"useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
								"cd ~",
								"mkdir /opt/tomcat",
								"wget https://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz",
								"tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
								"cd /opt/tomcat",
								"chgrp -R tomcat /opt/tomcat",
								"chmod -R g+r conf",
								"chmod g+x conf",
								"chown -R tomcat webapps/ work/ temp/ logs/",
								"cd /usr/lib/systemd/system",
								"touch tomcat.service",
								"echo '[Unit]' > tomcat.service",
								"echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
								"echo 'After=syslog.target network.target' >> tomcat.service",
								"echo '[Service]' >> tomcat.service",
								"echo 'Type=forking' >> tomcat.service",
								"echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
								"echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
								"echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
								"echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
								"echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
								"echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
								"echo 'User=tomcat' >> tomcat.service",
								"echo 'Group=tomcat' >> tomcat.service",
								"echo 'UMask=0007' >> tomcat.service",
								"echo 'RestartSec=10' >> tomcat.service",
								"echo 'Restart=always' >> tomcat.service",
								"echo '[Install]' >> tomcat.service",
								"echo 'WantedBy=multi-user.target' >> tomcat.service",
								"#systemctl daemon-reload",
								"echo '#!/bin/sh' >> /opt/tomcat/bin/setenv.sh \n",
								{
									"Fn::Join": [
										"", [
											"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://",
											{
												"Fn::GetAtt": [
													"RDSInstance", "Endpoint.Address"
												]
											},
											":3306/csye6225\"' >> /opt/tomcat/bin/setenv.sh \n"
										]
									]
								},
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active=dev\"'  >> /opt/tomcat/bin/setenv.sh \n",
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=csye6225master\"'  >> /opt/tomcat/bin/setenv.sh \n",
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=csye6225password\"'  >> /opt/tomcat/bin/setenv.sh \n",
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.dbname=csye6225\"'  >> /opt/tomcat/bin/setenv.sh \n",
								{
									"Fn::Join": [
										"", [
											"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.amazonProperties.bucketName=",

											{
												"Ref": "S3Bucket"
											},

											"\"' >> /opt/tomcat/bin/setenv.sh \n"
										]
									]
								},
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.amazonProperties.endpoint=https://s3.us-east-1.amazonaws.com\"'  >> /opt/tomcat/bin/setenv.sh \n",
								{
									"Fn::Join": [
										"", [
											"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Djsa.s3.bucket=",
											{
												"Fn::Join": [
													"",[
														"",
														{"Ref" : "S3Bucket"}
														]
														]
													},
											"\"' >> /opt/tomcat/bin/setenv.sh \n"
										]
									]
								},
								"chmod +x /opt/tomcat/bin/setenv.sh\n",
								"#systemctl daemon-reload\n"
							]
						]
					}
				},
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"ec2"
               }
            ],


      "SubnetId": {
            "Ref": "PublicSubnetKey1"
          },
        



       "SecurityGroupIds":[
               {
                  "Ref":"WebServerSecurityGroup"
               }
            ],
            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sda1",
                  "Ebs":{
                     "VolumeType":"gp2",
                     "DeleteOnTermination":"true",
                     "VolumeSize":"20"
                  }
               }
            ]
         }
      },
      "WebServerSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupName":"csye6225-webapp",
            "GroupDescription":"Enable HTTP access via port 80, SSH access via port 22, HTTPS access via port 443",
            "VpcId":{
               "Ref":"VpcID"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"80",
                  "ToPort":"80",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"443",
                  "ToPort":"443",
                  "CidrIp":"0.0.0.0/0"
               },
{                  "IpProtocol":"tcp",
                  "FromPort":"5000",
                  "ToPort":"5000",
                  "CidrIp":"0.0.0.0/0"}
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"csye6225-WebAppSecurityGroup"
                  }
               }
            ]
         }
      },
      "DBServerSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Condition":"Is-EC2-VPC",
         "Properties":{
            "GroupName":"csye6225-rds",
            "GroupDescription":"Allow TCP traffic on port 3306 for MySQL",
            "VpcId":{
               "Ref":"VpcID"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":3306,
                  "ToPort":3306,
                  "SourceSecurityGroupId":{
                     "Ref":"WebServerSecurityGroup"
                  }
               }
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"csye6225-DBSecurityGroup"
                  }
               }
            ]
         }
      },
      "RDSSubnetGroup":{
         "Type":"AWS::RDS::DBSubnetGroup",
         "Properties":{
            "DBSubnetGroupDescription":"Subnet group for RDS Instances",
            "SubnetIds":[
               {
                  "Ref":"PublicSubnetKey2"
               },
               {
                  "Ref":"PublicSubnetKey3"
               }
            ],
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"csye6225-RDSSubnetGroup"
                  }
               }
            ]
         }
      },
      "RDSInstance":{
         "Type":"AWS::RDS::DBInstance",
         "Properties":{
            "DBName":"csye6225",
            "AllocatedStorage":"100",
            "DBInstanceClass":"db.t2.medium",
            "Engine":"MySQL",
            "MasterUsername":"csye6225master",
            "MasterUserPassword":"csye6225password",
            "MultiAZ":false,
            "DBInstanceIdentifier":"csye6225-spring2019",
            "PubliclyAccessible":true,
            "Port":"3306",
            "DBSubnetGroupName":{
               "Ref":"RDSSubnetGroup"
            },
            "VPCSecurityGroups":{
               "Fn::If":[
                  "Is-EC2-VPC",
		  [
                     {
                        "Fn::GetAtt":[
                           "DBServerSecurityGroup",
                           "GroupId"
                        ]
                     }
                  ],
                  {
                     "Ref":"AWS::NoValue"
                  }
               ]
            },
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"csye6225-RDSInstance"
                  }
               }
            ]
         }
      },
      "DynamoDBTable":{
         "Type":"AWS::DynamoDB::Table",
         "Properties":{
            "AttributeDefinitions":[
               {
                  "AttributeName":"Id",
                  "AttributeType":"S"
               }
            ],
            "KeySchema":[
               {
                  "AttributeName":"Id",
                  "KeyType":"HASH"
               }
            ],
            "ProvisionedThroughput":{
               "ReadCapacityUnits":"1",
               "WriteCapacityUnits":"1"
            },
            "TableName":"csye6225",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":{
                     "Fn::Sub":"csye6225-DynamoDBTable"
                  }
               }
            ]
         }
      },

      "CodeDeployEC2ServiceRole":{
         "Type":"AWS::IAM::Role",
         "Properties": {
				"RoleName": "CodeDeployEC2ServiceRole",

				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["ec2.amazonaws.com"]

						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/",
				"Policies": [{
					"PolicyName": "CodeDeployEC2S3",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
							"Action": [
								"s3:Get*",
								"s3:Put*",
								"s3:Delete*",
                                                                "s3:List*"
							],
							"Effect": "Allow",
							"Resource": [{"Ref": "CDARN"}, {"Ref":"CDARN1"}, {"Ref":"Bucket"}, {"Ref": "Bucket1"}]
						}]
					}
				}]
			}
      },


        "CodeDeployServiceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "CodeDeployServiceRole",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": "codedeploy.amazonaws.com"
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"],
				"Path": "/"
			}
		},

      "Ec2InstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
	"DependsOn": "CodeDeployEC2ServiceRole",
         "Properties":{
	    
            "InstanceProfileName":"ec2instanceprofile",
            "Path":"/",
            "Roles":[
               {
                  "Ref":"CodeDeployEC2ServiceRole"
               }
            ]
         }

      },



      "CodeDeployApplication":{
         "Type":"AWS::CodeDeploy::Application",
         "Properties":{
            "ApplicationName":"csye6225-webapp",
            "ComputePlatform":"Server"
         }
      },
      "DeploymentGroup":{
         "Type":"AWS::CodeDeploy::DeploymentGroup",
         "Properties":{
            "ApplicationName":{"Ref":"CodeDeployApplication"},
            "DeploymentGroupName":"csye6225-webapp-deployment",
            "DeploymentStyle":{
               "DeploymentType":"IN_PLACE",
               "DeploymentOption":"WITHOUT_TRAFFIC_CONTROL"
            },
            "Ec2TagFilters":[
               {
                  "Key":"Name",
                  "Type":"KEY_AND_VALUE",
                  "Value":"ec2"
               }
            ],
            "ServiceRoleArn":{
               "Fn::GetAtt":[
                  "CodeDeployServiceRole", "Arn"
               ]
            },
            "DeploymentConfigName":"CodeDeployDefault.AllAtOnce",
            
            "AutoRollbackConfiguration":{
               "Enabled":"True",
               "Events": [ "DEPLOYMENT_FAILURE" ] 
               
            }
         }
      }
   },

   "Outputs":{
      "EC2Instance":{
         "Description":"The EC2 Instance for Web Server",
         "Value":{
            "Ref":"EC2Instance"
         },
         "Export":{
            "Name":{
               "Fn::Sub":"EC2InstanceID"
            }
         }
      },
      "WebServerSecurityGroup":{
         "Description":"The security group id for the Web Server",
         "Value":{
            "Ref":"WebServerSecurityGroup"
         },
         "Export":{
            "Name":{
               "Fn::Sub":"WebServerSecurityGroupID"
            }
         }
      },
      "DBServerSecurityGroup":{
         "Description":"The security group id for the RDS Server",
         "Value":{
            "Ref":"DBServerSecurityGroup"
         },
         "Export":{
            "Name":{
               "Fn::Sub":"DBServerSecurityGroupID"
            }
         }
      },
      "RDSInstance":{
         "Description":"The RDS Instance for Backend Database",
         "Value":{
            "Ref":"RDSInstance"
         },
         "Export":{
            "Name":{
               "Fn::Sub":"RDSInstanceID"
            }
         }
      },
      "DynamoDBTable":{
         "Description":"The DynamoDBTableId",
         "Value":{
            "Ref":"DynamoDBTable"
         },
         "Export":{
            "Name":{
               "Fn::Sub":"DynamoDBTableID"
            }
         }
      }
   }
}


