{
   "AWSTemplateFormatVersion" : "2010-09-09",
   "Parameters" : {
      "amiId" : {
         "Description" : "Ami Id to launch ec2 instance",
         "Type" : "String"
      },
      "myVpc"    : {
       "Description"  : "Id for Vpc",
       "Type"         : "String"
      },
      "subnetId1"    : {
       "Description"  : "Id for subnet1",
       "Type"         : "String"
      },
      "subnetId2"    : {
       "Description"  : "Id for subnet2",
       "Type"         : "String"
      },
      "subnetId3"    : {
       "Description"  : "Id for subnet3",
       "Type"         : "String"
      },
      "bucketName"    : {
       "Description"  : "name of bucket where app is to be deployed",
       "Type"         : "String"
      }
   },
   "Conditions": {
        "Is-EC2-VPC": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-east-1"
            ]
        }
    },
   "Resources" : {
      "myImage" : {
         "Type" : "AWS::EC2::Instance",
         "Properties" : {
            "ImageId" : { "Ref" : "amiId" },
            "KeyName" : "keypair",
            "InstanceType" : "t2.medium",
            "BlockDeviceMappings" : [
               {
                  "DeviceName" : "/dev/sda1",
                  "Ebs" : {
                        "VolumeSize" : 20,
                        "VolumeType" : "gp2",
                        "DeleteOnTermination": "true"
                  }
               }
            ],
            "UserData" : {
               "Fn::Base64" : { 
                  "Fn::Join" : [
                     "\n",
                     [
                        "#!/bin/bash -xe",
			"sudo service codedeploy-agent start",
                        {
                        "Fn::Join" : [
                           "",
                           [
                           "sudo echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dspring.datasource.username=csye6225master -Dspring.datasource.password=csye6225password -Dspring.bucketName=\"",
                           {
                              "Ref" : "bucketName"
                           },
                           "\" -Dspring.profiles.active=aws\\\"\">> /etc/default/tomcat8"
                           ]
                        ]
                        },
                        {
                           "Fn::Join" : [
                              "",
                              [
                                 "echo 'JAVA_OPTS=\"${JAVA_OPTS} -Dspring.datasource.url=\\\"jdpc:mysql://",
                                 {
                                    "Fn::GetAtt" : [
                                       "myRDSInstance",
				       "Endpoint.Address"	
                                    ] 
                                 },
                                 ":3306/csye6625\\\"\"' >> /etc/default/tomcat8"
                              ]
                           ]
                        }                        
                     ]
                  ]
               }
            },
            "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeviceIndex": "0",
                        "GroupSet" : [
                           {
                              "Ref" : "webappSecurityGroup"
                           }
                        ],
                        "SubnetId": {
                            "Ref": "subnetId1"
                        }
                    }
                ],
            "IamInstanceProfile" : {
               "Ref" : "InstanceProfile"
            }, 
            "Tags" : [
               {
                  "Key" : "Name",
                  "Value": {
                     "Fn::Join": [
                     "",
                     [
                        {
                           "Ref": "AWS::StackName"
                        },
                        "-csye6225-Ec2Instance"
                     ]
                     ]
                  }
               }
            ]
         }
      },
      "codeDeployRole" : {
         "Type" : "AWS::IAM::Role",
         "Properties" : {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement" : [
                  {
                     "Effect" : "Allow",
                     "Principal" : {
                     "Service" : ["ec2.amazonaws.com"]
                  },
                     "Action" : [
                     "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "RoleName" : "CodeDeployEc2ServiceRole",
            "Path" : "/"
         }
      },
      "InstanceProfile" : {
         "Type" : "AWS::IAM::InstanceProfile",
         "Properties" : {
            "Path" : "/",
            "Roles" : [
               {
                  "Ref" : "codeDeployRole"
               }
            ]
         }
      },
      "codeDeployEc2S3" : {
         "Type" : "AWS::IAM::ManagedPolicy",
         "Properties" : {
            "PolicyDocument" : {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Action": [
                        "s3:Get*",
                        "s3:List*"
                     ],
                     "Resource":[{
                     "Fn::Join": [
                        "",
                        [
                           "arn:aws:s3:::",
                           {
                              "Ref": "bucketName"
                           },
                           "/*"
                        ]
                      ]
                     }] 
                  }
               ]
            },
            "Roles" : [ { "Ref" : "codeDeployRole" } ],
            "ManagedPolicyName" : "CodeDeploy-Ec2-S3" 
         }
      },
      "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "CodeDeployServiceRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
        ],
        "Path": "/"
      }
    },
    "codeDeployApp" : {
      "Type" : "AWS::CodeDeploy::Application",
      "Properties" : {
        "ApplicationName" : "csye6225-webapp",
        "ComputePlatform" : "Server"
      }
    },
    "deploymentGroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": { "Ref" : "codeDeployApp"},
        "Ec2TagFilters": [
          {
            "Key" : "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-csye6225-Ec2Instance"
                ]
              ]
            }, 
            "Type": "KEY_AND_VALUE"
          }
        ],
        "DeploymentGroupName": "csye6225-webapp-deployment",
        "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
        "DeploymentStyle": {
          "DeploymentType": "IN_PLACE",
          "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
        },
        "ServiceRoleArn": {
           "Fn::GetAtt": [
              "CodeDeployServiceRole",
              "Arn"
           ]
        },
        "AutoRollbackConfiguration": {
            "Enabled" : "True",
            "Events" : ["DEPLOYMENT_FAILURE"]
        }
      }
    },
      "myDynamoDB" : {
         "Type" : "AWS::DynamoDB::Table",
         "Properties" : {
            "TableName" : "csye-6225",
            "AttributeDefinitions" : [
		  {
			"AttributeName" : "id",
			"AttributeType" : "S"   
		  }
		],
		"KeySchema" : [
		  {
			"AttributeName" : "id",
			"KeyType" : "HASH"
		  }
		],
	    "ProvisionedThroughput" : {
	      "ReadCapacityUnits" : "5",
	      "WriteCapacityUnits" : "5"
		    }
		}
      },
      "RDSDBSubnetGroup":{  
         "Type"       :"AWS::RDS::DBSubnetGroup",
         "Properties" :{  
            "DBSubnetGroupDescription":"RDS DB Subnet Group",
            "SubnetIds" : [ 
               { "Ref" : "subnetId2" },
               { "Ref" : "subnetId3" }
            ]
         }
      },
      "myRDSInstance" : {
         "Type" : "AWS::RDS::DBInstance",
         "Properties" : {
            "AllocatedStorage" : "5",
            "DBInstanceClass" : "db.t2.medium",
            "DBInstanceIdentifier" : "csye6225-spring2019",
            "DBSubnetGroupName" : { "Ref"  : "RDSDBSubnetGroup" },
            "MasterUsername" : "csye6225master",
            "MasterUserPassword" : "csye6225password",
            "MultiAZ" : false,
            "PubliclyAccessible" : true,
            "Engine" : "MySQL",
            "VPCSecurityGroups": [{
               "Ref" : "DBSecurityGroup"
            }],
            "DBName" : "csye6225"
         }     
      },
      "webappSecurityGroup" : {
         "Type" : "AWS::EC2::SecurityGroup",
         "Properties" : {
            "GroupDescription" : "Allow http traffic to webserver",
            "VpcId": {
                    "Ref": "myVpc"
                }, 
            "SecurityGroupIngress" : [
               {
                  "IpProtocol": "tcp",
                  "FromPort" : "22",
                  "ToPort" : "22",
                  "CidrIp" : "0.0.0.0/0"
               },
               {
                  "IpProtocol": "tcp",
                  "FromPort" : "80",
                  "ToPort" : "80",
                  "CidrIp" : "0.0.0.0/0"
               },
               {
                  "IpProtocol": "tcp",
                  "FromPort" : "443",
                  "ToPort" : "443",
                  "CidrIp" : "0.0.0.0/0"
               },
               {
                  "IpProtocol": "tcp",
                  "FromPort" : "8080",
                  "ToPort" : "8080",
                  "CidrIp" : "0.0.0.0/0"
               }
            ]
         }
      },
       "DBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Condition": "Is-EC2-VPC",
            "Properties": {
                "GroupDescription": "allow connections from specified source security group and ec2 Security group",
                "VpcId": {
                    "Ref": "myVpc"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "SourceSecurityGroupId": {
                            "Ref": "webappSecurityGroup"
                        }
                    }
                ]
            }
      }
   }
}
